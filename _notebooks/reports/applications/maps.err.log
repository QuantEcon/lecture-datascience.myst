Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
state_df = gpd.read_file("https://datascience.quantecon.org/assets/data/cb_2016_us_state_5m.zip")
state_df.head()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mHTTPError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[16], line 1[0m
[0;32m----> 1[0m state_df [38;5;241m=[39m [43mgpd[49m[38;5;241;43m.[39;49m[43mread_file[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mhttps://datascience.quantecon.org/assets/data/cb_2016_us_state_5m.zip[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      2[0m state_df[38;5;241m.[39mhead()

File [0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/site-packages/geopandas/io/file.py:248[0m, in [0;36m_read_file[0;34m(filename, bbox, mask, rows, engine, **kwargs)[0m
[1;32m    246[0m from_bytes [38;5;241m=[39m [38;5;28;01mFalse[39;00m
[1;32m    247[0m [38;5;28;01mif[39;00m _is_url(filename):
[0;32m--> 248[0m     req [38;5;241m=[39m [43m_urlopen[49m[43m([49m[43mfilename[49m[43m)[49m
[1;32m    249[0m     path_or_bytes [38;5;241m=[39m req[38;5;241m.[39mread()
[1;32m    250[0m     from_bytes [38;5;241m=[39m [38;5;28;01mTrue[39;00m

File [0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/urllib/request.py:214[0m, in [0;36murlopen[0;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[1;32m    212[0m [38;5;28;01melse[39;00m:
[1;32m    213[0m     opener [38;5;241m=[39m _opener
[0;32m--> 214[0m [38;5;28;01mreturn[39;00m [43mopener[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/urllib/request.py:523[0m, in [0;36mOpenerDirector.open[0;34m(self, fullurl, data, timeout)[0m
[1;32m    521[0m [38;5;28;01mfor[39;00m processor [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mprocess_response[38;5;241m.[39mget(protocol, []):
[1;32m    522[0m     meth [38;5;241m=[39m [38;5;28mgetattr[39m(processor, meth_name)
[0;32m--> 523[0m     response [38;5;241m=[39m [43mmeth[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mresponse[49m[43m)[49m
[1;32m    525[0m [38;5;28;01mreturn[39;00m response

File [0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/urllib/request.py:632[0m, in [0;36mHTTPErrorProcessor.http_response[0;34m(self, request, response)[0m
[1;32m    629[0m [38;5;66;03m# According to RFC 2616, "2xx" code indicates that the client's[39;00m
[1;32m    630[0m [38;5;66;03m# request was successfully received, understood, and accepted.[39;00m
[1;32m    631[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;241m200[39m [38;5;241m<[39m[38;5;241m=[39m code [38;5;241m<[39m [38;5;241m300[39m):
[0;32m--> 632[0m     response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparent[49m[38;5;241;43m.[39;49m[43merror[49m[43m([49m
[1;32m    633[0m [43m        [49m[38;5;124;43m'[39;49m[38;5;124;43mhttp[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mrequest[49m[43m,[49m[43m [49m[43mresponse[49m[43m,[49m[43m [49m[43mcode[49m[43m,[49m[43m [49m[43mmsg[49m[43m,[49m[43m [49m[43mhdrs[49m[43m)[49m
[1;32m    635[0m [38;5;28;01mreturn[39;00m response

File [0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/urllib/request.py:561[0m, in [0;36mOpenerDirector.error[0;34m(self, proto, *args)[0m
[1;32m    559[0m [38;5;28;01mif[39;00m http_err:
[1;32m    560[0m     args [38;5;241m=[39m ([38;5;28mdict[39m, [38;5;124m'[39m[38;5;124mdefault[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mhttp_error_default[39m[38;5;124m'[39m) [38;5;241m+[39m orig_args
[0;32m--> 561[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_call_chain[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/urllib/request.py:494[0m, in [0;36mOpenerDirector._call_chain[0;34m(self, chain, kind, meth_name, *args)[0m
[1;32m    492[0m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[1;32m    493[0m     func [38;5;241m=[39m [38;5;28mgetattr[39m(handler, meth_name)
[0;32m--> 494[0m     result [38;5;241m=[39m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m
[1;32m    495[0m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    496[0m         [38;5;28;01mreturn[39;00m result

File [0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.9/urllib/request.py:641[0m, in [0;36mHTTPDefaultErrorHandler.http_error_default[0;34m(self, req, fp, code, msg, hdrs)[0m
[1;32m    640[0m [38;5;28;01mdef[39;00m [38;5;21mhttp_error_default[39m([38;5;28mself[39m, req, fp, code, msg, hdrs):
[0;32m--> 641[0m     [38;5;28;01mraise[39;00m HTTPError(req[38;5;241m.[39mfull_url, code, msg, hdrs, fp)

[0;31mHTTPError[0m: HTTP Error 404: Not Found
HTTPError: HTTP Error 404: Not Found

