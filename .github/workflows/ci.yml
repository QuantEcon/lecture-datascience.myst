name: Build Project [using jupyter-book]
on: [push]
jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Anaconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: true
          miniconda-version: 'latest'
          python-version: 3.8
          environment-file: environment.yml
          activate-environment: lecture-datascience
      - name: Install myst-nb
        run: |
          pip install git+https://github.com/executablebooks/MyST-NB@master
      - name: Install sphinx
        run: |
          pip install sphinx==3.5.0
      - name: Install latex dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y     \
            texlive-latex-recommended \
            texlive-latex-extra       \
            texlive-fonts-recommended \
            texlive-fonts-extra       \
            texlive-xetex             \
            latexmk                   \
            xindy                     \
            imagemagick
      - name: Display Conda Environment Versions
        shell: bash -l {0}
        run: conda list
      - name: Display Pip Versions
        shell: bash -l {0}
        run: pip list
      # Build Assets (Download Notebooks and PDF via LaTeX)
      - name: Build PDF from LaTeX
        shell: bash -l {0}
        run: |
          jb build lectures --builder pdflatex --path-output ./ -n --keep-going
          mkdir -p _build/html/_pdf
          cp -u _build/latex/*.pdf _build/html/_pdf
      - name: Download "build" folder (cache)
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: cache.yml
          branch: main
          name: build-cache
          path: _build
      - name: Build HTML
        shell: bash -l {0}
        run: |
          jb build lectures --path-output ./ -W --keep-going
      - name: Upload Execution Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: execution-reports
          path: _build/html/reports
      - name: Build Download Notebooks (sphinx-tojupyter)
        shell: bash -l {0}
        run: |
          jb build lectures --path-output ./ --builder=custom --custom-builder=jupyter
          mkdir -p _build/html/_notebooks
          rsync -r  _build/jupyter/ _build/html/_notebooks/
      - name: Copy Data Assets for Deployment
        shell: bash -l {0}
        run: |
          mkdir -p _build/html/assets/data
          cp -a lectures/_data/. _build/html/assets/data/
      - name: Save Build as Artifact
        uses: actions/upload-artifact@v1
        with:
          name: _build
          path: _build
      - name: Preview Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: '_build/html/'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Preview Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}